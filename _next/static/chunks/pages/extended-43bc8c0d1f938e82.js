(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[970],{4209:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/extended",function(){return t(6303)}])},6303:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return r}});var a=t(5893),i=t(1151);function s(e){let n=Object.assign({h1:"h1",p:"p",h2:"h2",em:"em",hr:"hr"},(0,i.ah)(),e.components),{Properties:t,Property:s}=n;return t||d("Properties",!0),s||d("Property",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{children:"Extended Array Functions"}),"\n",(0,a.jsx)(n.p,{children:"The data2d and data3d objects extend several of the built-in array functions, offering a seamless and intuitive experience for\nperforming common array manipulations directly within these objects."}),"\n",(0,a.jsx)(n.h2,{id:"includes",children:"includes()"}),"\n",(0,a.jsx)(n.p,{children:"Checks if value is included. This method extends Pine Script's array.includes() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"data2d",children:(0,a.jsx)(n.p,{children:"A data2d object."})}),(0,a.jsx)(s,{name:"value",type:"object",children:(0,a.jsx)(n.p,{children:"Any object of data type string, float, integer (including Unix timestamp), boolean and color."})}),(0,a.jsx)(s,{name:"alt",type:"bool",children:(0,a.jsxs)(n.p,{children:["Use true for checking alternate values, false for main values. ",(0,a.jsx)(n.em,{children:"Optional. The default is false"}),"."]})}),(0,a.jsx)(s,{name:"returns",type:"bool",children:(0,a.jsx)(n.p,{children:"A boolean value."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"pk-includes",children:"pkIncludes()"}),"\n",(0,a.jsx)(n.p,{children:"Check if a value is included in a primary key. This method extends Pine Script's array.includes() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"data2d",children:(0,a.jsx)(n.p,{children:"A data2d object."})}),(0,a.jsx)(s,{name:"primaryKey",type:"string",children:(0,a.jsx)(n.p,{children:"A primary key used for searching."})}),(0,a.jsx)(s,{name:"value",type:"object",children:(0,a.jsx)(n.p,{children:"Any object of data type string, float, integer (including Unix timestamp), boolean and color."})}),(0,a.jsx)(s,{name:"alt",type:"bool",children:(0,a.jsxs)(n.p,{children:["Use true for checking alternate values, false for main values. ",(0,a.jsx)(n.em,{children:"Optional. The default is false"}),"."]})}),(0,a.jsx)(s,{name:"returns",type:"bool",children:(0,a.jsx)(n.p,{children:"A boolean value."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"dk-includes",children:"dkIncludes()"}),"\n",(0,a.jsx)(n.p,{children:"Check if a value is included in a data key. This method extends Pine Script's array.includes() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"data2d",children:(0,a.jsx)(n.p,{children:"A data2d object."})}),(0,a.jsx)(s,{name:"dataKey",type:"string",children:(0,a.jsx)(n.p,{children:"A data key used for searching."})}),(0,a.jsx)(s,{name:"value",type:"object",children:(0,a.jsx)(n.p,{children:"Any object of data type string, float, integer (including Unix timestamp), boolean and color."})}),(0,a.jsx)(s,{name:"alt",type:"bool",children:(0,a.jsxs)(n.p,{children:["Use true for checking alternate values, false for main values. ",(0,a.jsx)(n.em,{children:"Optional. The default is false"}),"."]})}),(0,a.jsx)(s,{name:"returns",type:"bool",children:(0,a.jsx)(n.p,{children:"A boolean value."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"set",children:"set()"}),"\n",(0,a.jsx)(n.p,{children:"Modifies the value linked to the specified key(s). This method extends Pine Script's array.set() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"object",children:(0,a.jsx)(n.p,{children:"An obect of type data2d or data3d."})}),(0,a.jsx)(s,{name:"key",type:"string",children:(0,a.jsx)(n.p,{children:"A key used for searching. This parameter is only available with data2d object; not available when using data3d object."})}),(0,a.jsx)(s,{name:"primaryKey",type:"string",children:(0,a.jsx)(n.p,{children:"A primary key used for searching. This parameter is only available with data3d object; not available when using data2d object."})}),(0,a.jsx)(s,{name:"dataKey",type:"string",children:(0,a.jsx)(n.p,{children:"A data key used for searching. This parameter is only available with data3d object; not available when using data2d object."})}),(0,a.jsx)(s,{name:"value",type:"object",children:(0,a.jsx)(n.p,{children:"Any object of data type string, float, integer (including Unix timestamp), boolean and color."})}),(0,a.jsx)(s,{name:"alt",type:"bool",children:(0,a.jsxs)(n.p,{children:["Switch between main or alternate value. Use true for alternate. ",(0,a.jsx)(n.em,{children:"Optional. The default is false"}),"."]})}),(0,a.jsx)(s,{name:"returns",type:"object",children:(0,a.jsx)(n.p,{children:"This data2d or data3d object."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"push",children:"push()"}),"\n",(0,a.jsx)(n.p,{children:"Push a new key and value pair into a data2d object. This method extends Pine Script's array.push() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"data2d",children:(0,a.jsx)(n.p,{children:"A data2d object."})}),(0,a.jsx)(s,{name:"key",type:"string",children:(0,a.jsx)(n.p,{children:"A key used for searching. This parameter is only available with data2d object; not available when using data3d object."})}),(0,a.jsx)(s,{name:"value",type:"object",children:(0,a.jsx)(n.p,{children:"Any object of data type string, float, integer (including Unix timestamp), boolean and color."})}),(0,a.jsx)(s,{name:"altValue",type:"object",children:(0,a.jsxs)(n.p,{children:["Any object of data type string, float, integer (including Unix timestamp), boolean and color.\nIt must match the data type of the kv object. ",(0,a.jsx)(n.em,{children:"Optional. The default is na"}),"."]})}),(0,a.jsx)(s,{name:"timestamp",type:"bool",children:(0,a.jsxs)(n.p,{children:["A boolean flag to indicate if the integer value is of timestamp data type. Use true for timestamp values.\nThis parameter is only available with integer values (includes timestamps); for all other cases, not available.\n",(0,a.jsx)(n.em,{children:"Optional. The default is na"}),"."]})}),(0,a.jsx)(s,{name:"timezone",type:"string",children:(0,a.jsxs)(n.p,{children:['A string representing timezone in UTC/GMT notation (e.g., "UTC-5", "GMT+0530") or as an IANA time zone\ndatabase name (e.g., "America/New_York").\nThis parameter is only available with integer values (includes timestamps); for all other cases, not available.\n',(0,a.jsx)(n.em,{children:"Optional. The default is na"}),"."]})}),(0,a.jsx)(s,{name:"format",type:"string",children:(0,a.jsxs)(n.p,{children:["A string format. ",(0,a.jsx)(n.em,{children:"Optional. The default is na"}),"."]})}),(0,a.jsx)(s,{name:"returns",type:"data2d",children:(0,a.jsx)(n.p,{children:"This data2d object."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"pk-push",children:"pkPush()"}),"\n",(0,a.jsx)(n.p,{children:"Push a new primary key and key-value pairs into a data3d object. This method extends Pine Script's array.push() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"data3d",children:(0,a.jsx)(n.p,{children:"A data3d object."})}),(0,a.jsx)(s,{name:"pkv",type:"pkv",children:(0,a.jsx)(n.p,{children:"A pkv object."})}),(0,a.jsx)(s,{name:"returns",type:"data3d",children:(0,a.jsx)(n.p,{children:"This data3d object."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"remove",children:"remove()"}),"\n",(0,a.jsx)(n.p,{children:"Removes the key and data of the specified key. If alt is true, then removes only alternate value. This method extends\nPine Script's array.remove() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"data2d",children:(0,a.jsx)(n.p,{children:"A data2d object."})}),(0,a.jsx)(s,{name:"key",type:"string",children:(0,a.jsx)(n.p,{children:"A key used for searching."})}),(0,a.jsx)(s,{name:"alt",type:"bool",children:(0,a.jsxs)(n.p,{children:["Switch between main or alternate value. Use true for alternate. ",(0,a.jsx)(n.em,{children:"Optional. The default is false"}),"."]})}),(0,a.jsx)(s,{name:"returns",type:"data2d",children:(0,a.jsx)(n.p,{children:"This data2d object."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"pk-remove",children:"pkRemove()"}),"\n",(0,a.jsx)(n.p,{children:"Removes the primary key and all its data. This method extends Pine Script's array.remove() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"data3d",children:(0,a.jsx)(n.p,{children:"A data3d object."})}),(0,a.jsx)(s,{name:"primaryKey",type:"string",children:(0,a.jsx)(n.p,{children:"A primary key used for searching."})}),(0,a.jsx)(s,{name:"returns",type:"data3d",children:(0,a.jsx)(n.p,{children:"This data3d object."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"sort",children:"sort()"}),"\n",(0,a.jsx)(n.p,{children:"Sort data2d keys based on data2d values. This method extends Pine Script's array.sort() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"data2d",children:(0,a.jsx)(n.p,{children:"A data2d object."})}),(0,a.jsx)(s,{name:"asc",type:"bool",children:(0,a.jsxs)(n.p,{children:["Use true for ascending order, false for Descending order. ",(0,a.jsx)(n.em,{children:"Optional. The default is true"}),"."]})}),(0,a.jsx)(s,{name:"change",type:"bool",children:(0,a.jsxs)(n.p,{children:["Sorts using change percent if true. ",(0,a.jsx)(n.em,{children:"Optional. The default is na"}),"."]})}),(0,a.jsx)(s,{name:"returns",type:"data2d",children:(0,a.jsx)(n.p,{children:"A sorted data2d object."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"sort-2",children:"sort()"}),"\n",(0,a.jsx)(n.p,{children:"Sort data3d primary keys based on specified data key. This method extends Pine Script's array.sort() function."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"data2d",children:(0,a.jsx)(n.p,{children:"A data2d object."})}),(0,a.jsx)(s,{name:"dataKey",type:"string",children:(0,a.jsx)(n.p,{children:"The data key used for sorting."})}),(0,a.jsx)(s,{name:"asc",type:"bool",children:(0,a.jsxs)(n.p,{children:["Use true for ascending order, false for Descending order. ",(0,a.jsx)(n.em,{children:"Optional. The default is true"}),"."]})}),(0,a.jsx)(s,{name:"change",type:"bool",children:(0,a.jsxs)(n.p,{children:["Sorts using change percent if true. ",(0,a.jsx)(n.em,{children:"Optional. The default is na"}),"."]})}),(0,a.jsx)(s,{name:"returns",type:"data2d",children:(0,a.jsx)(n.p,{children:"A sorted data2d object."})})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"format",children:"format()"}),"\n",(0,a.jsx)(n.p,{children:"Set custom format for an object. This method extends Pine Script's str.format() and str.format_time() functions."}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)(s,{name:"this",type:"object",children:(0,a.jsx)(n.p,{children:"An object of type kv, data2d or data3d."})}),(0,a.jsx)(s,{name:"format",type:"string",children:(0,a.jsx)(n.p,{children:"A format string."})}),(0,a.jsx)(s,{name:"timezone",type:"string",children:(0,a.jsxs)(n.p,{children:["A timezone value. This parameter is only available with kv object; for all other cases, not available. ",(0,a.jsx)(n.em,{children:"Optional. The default is na"}),"."]})}),(0,a.jsx)(s,{name:"returns",type:"object",children:(0,a.jsx)(n.p,{children:"This object."})})]})]})}var r=!0;function d(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(s,e)})):s(e)}}},function(e){e.O(0,[774,888,179],function(){return e(e.s=4209)}),_N_E=e.O()}]);