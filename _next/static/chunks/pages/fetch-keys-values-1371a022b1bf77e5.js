(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[321],{725:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/fetch-keys-values",function(){return t(8525)}])},8525:function(e,a,t){"use strict";t.r(a),t.d(a,{__N_SSG:function(){return s}});var r=t(5893),n=t(1151);function i(e){let a=Object.assign({h1:"h1",p:"p",h2:"h2",hr:"hr",em:"em",code:"code"},(0,n.ah)(),e.components),{Properties:t,Property:i}=a;return t||l("Properties",!0),i||l("Property",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{children:"Fetch Keys And Values"}),"\n",(0,r.jsx)(a.p,{children:"There are several methods available for retrieving keys and values from data2d and data3d objects. It is highly recommended\nto utilize these methods instead of directly accessing the objects. These methods are specifically designed to handle various\ninternal functionalities and encapsulate the full capabilities of these data structures."}),"\n",(0,r.jsx)(a.p,{children:"When dealing with a data3d object, which stores data using primary keys and data keys, there are three main ways to retrieve\ndata: fetching all data associated with a primary key, retrieving all data associated with a data key, or obtaining a single\ndata point associated with both keys. To simplify this process, most methods have prefixes like pk (for primary key) or dk\n(for data key). This naming convention helps streamline method usage."}),"\n",(0,r.jsx)(a.h2,{id:"keys",children:"keys()"}),"\n",(0,r.jsx)(a.p,{children:"The keys() method allows you to retrieve all the keys from a data2d object. If the object is sorted, this method will ensure that the keys are\nreturned in the proper sorted order."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data2d",children:(0,r.jsx)(a.p,{children:"A data2d object."})}),(0,r.jsx)(i,{name:"returns",type:"array<string>",children:(0,r.jsx)(a.p,{children:"A string array."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"primary-keys",children:"primaryKeys()"}),"\n",(0,r.jsx)(a.p,{children:"The primaryKeys() method allows you to retrieve all the primary keys from a data3d object. If the object is sorted, this method will ensure\nthat the primary keys are returned in the proper sorted order."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"returns",type:"array<string>",children:(0,r.jsx)(a.p,{children:"A string array."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"data-keys",children:"dataKeys()"}),"\n",(0,r.jsx)(a.p,{children:"The dataKeys() method allows you to retrieve all the data keys from a data3d object."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"returns",type:"array<string>",children:(0,r.jsx)(a.p,{children:"A string array."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"values",children:"values()"}),"\n",(0,r.jsx)(a.p,{children:"Get all values in string representation. Formatted and sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data2d",children:(0,r.jsx)(a.p,{children:"A data2d object."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"array<string>",children:(0,r.jsx)(a.p,{children:"A string array."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"pk-values",children:"pkValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all values from the primary key in string representation. Formatted and sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A primary key."})}),(0,r.jsx)(i,{name:"returns",type:"array<string>",children:(0,r.jsx)(a.p,{children:"A string array."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"dk-values",children:"dkValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all values from the data key in string representation. Formatted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data key."})}),(0,r.jsx)(i,{name:"returns",type:"array<string>",children:(0,r.jsx)(a.p,{children:"A string array."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"string-values",children:"stringValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all string values. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data2d",children:(0,r.jsx)(a.p,{children:"A data2d object."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"array<string>",children:(0,r.jsxs)(a.p,{children:["A string array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"pk-string-values",children:"pkStringValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all string values from the primary key. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A primary key."})}),(0,r.jsx)(i,{name:"returns",type:"array<string>",children:(0,r.jsxs)(a.p,{children:["A string array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"dk-string-values",children:"dkStringValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all string values from the data key."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data key."})}),(0,r.jsx)(i,{name:"returns",type:"array<string>",children:(0,r.jsxs)(a.p,{children:["A string array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"float-values",children:"floatValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all float values. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data2d",children:(0,r.jsx)(a.p,{children:"A data2d object."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"array<float>",children:(0,r.jsxs)(a.p,{children:["A float array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"pk-float-values",children:"pkFloatValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all float values from the primary key. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"primaryKey",type:"float",children:(0,r.jsx)(a.p,{children:"A primary key."})}),(0,r.jsx)(i,{name:"returns",type:"array<float>",children:(0,r.jsxs)(a.p,{children:["A float array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"dk-float-values",children:"dkFloatValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all float values from the data key."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"dataKey",type:"float",children:(0,r.jsx)(a.p,{children:"A data key."})}),(0,r.jsx)(i,{name:"returns",type:"array<float>",children:(0,r.jsxs)(a.p,{children:["A float array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"int-values",children:"intValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all integer values. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data2d",children:(0,r.jsx)(a.p,{children:"A data2d object."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"array<int>",children:(0,r.jsxs)(a.p,{children:["An integer array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"pk-int-values",children:"pkIntValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all integer values from the primary key. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"primaryKey",type:"int",children:(0,r.jsx)(a.p,{children:"A primary key."})}),(0,r.jsx)(i,{name:"returns",type:"array<int>",children:(0,r.jsxs)(a.p,{children:["An integer array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"dk-int-values",children:"dkIntValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all integer values from the data key."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"dataKey",type:"int",children:(0,r.jsx)(a.p,{children:"A data key."})}),(0,r.jsx)(i,{name:"returns",type:"array<int>",children:(0,r.jsxs)(a.p,{children:["An integer array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"bool-values",children:"boolValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all boolean values. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data2d",children:(0,r.jsx)(a.p,{children:"A data2d object."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"array<bool>",children:(0,r.jsxs)(a.p,{children:["A boolean array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"pk-bool-values",children:"pkBoolValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all boolean values from the primary key. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"primaryKey",type:"bool",children:(0,r.jsx)(a.p,{children:"A primary key."})}),(0,r.jsx)(i,{name:"returns",type:"array<bool>",children:(0,r.jsxs)(a.p,{children:["A boolean array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"dk-bool-values",children:"dkBoolValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all boolean values from the data key."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"dataKey",type:"bool",children:(0,r.jsx)(a.p,{children:"A data key."})}),(0,r.jsx)(i,{name:"returns",type:"array<bool>",children:(0,r.jsxs)(a.p,{children:["A boolean array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"color-values",children:"colorValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all color values. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data2d",children:(0,r.jsx)(a.p,{children:"A data2d object."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"array<color>",children:(0,r.jsxs)(a.p,{children:["A color array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"pk-color-values",children:"pkColorValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all color values from the primary key. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"primaryKey",type:"color",children:(0,r.jsx)(a.p,{children:"A primary key."})}),(0,r.jsx)(i,{name:"returns",type:"array<color>",children:(0,r.jsxs)(a.p,{children:["A color array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"dk-color-values",children:"dkColorValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all color values from the data key."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"dataKey",type:"color",children:(0,r.jsx)(a.p,{children:"A data key."})}),(0,r.jsx)(i,{name:"returns",type:"array<color>",children:(0,r.jsxs)(a.p,{children:["A color array. For keys with all other data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"timestamp-values",children:"timestampValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all unix timestamp values. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data2d",children:(0,r.jsx)(a.p,{children:"A data2d object."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"array<timestamp>",children:(0,r.jsxs)(a.p,{children:["An integer array with unix timestamp values. For keys with other than timestamp data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"pk-timestamp-values",children:"pkTimestampValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all unix timestamp values from the primary key. Sorted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A primary key."})}),(0,r.jsx)(i,{name:"returns",type:"array<timestamp>",children:(0,r.jsxs)(a.p,{children:["An integer array with unix timestamp values. For keys with other than timestamp data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"dk-timestamp-values",children:"dkTimestampValues()"}),"\n",(0,r.jsx)(a.p,{children:"Get all unix timestamp values from the data key."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"data3d",children:(0,r.jsx)(a.p,{children:"A data3d object."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data key."})}),(0,r.jsx)(i,{name:"returns",type:"array<timestamp>",children:(0,r.jsxs)(a.p,{children:["An integer array with unix timestamp values. For keys with other than timestamp data types, array item will be ",(0,r.jsx)(a.code,{children:"na"}),"."]})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"get",children:"get()"}),"\n",(0,r.jsx)(a.p,{children:"Get a single value in string representation for the specified key(s), formatted, if applicable."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"object",children:(0,r.jsx)(a.p,{children:"A data2d or a data3d object."})}),(0,r.jsx)(i,{name:"key",type:"string",children:(0,r.jsx)(a.p,{children:"A key identifier. This parameter is only available with data2d object; not available for data3d."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d primary key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d data key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"string",children:(0,r.jsx)(a.p,{children:"A string value."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"get-string",children:"getString()"}),"\n",(0,r.jsx)(a.p,{children:"Get the string value for the specified key(s)."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"object",children:(0,r.jsx)(a.p,{children:"A data2d or a data3d object."})}),(0,r.jsx)(i,{name:"key",type:"string",children:(0,r.jsx)(a.p,{children:"A key identifier. This parameter is only available with data2d object; not available for data3d."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d primary key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d data key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"string",children:(0,r.jsx)(a.p,{children:"A string value, or na for other data type."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"get-float",children:"getFloat()"}),"\n",(0,r.jsx)(a.p,{children:"Get the float value for the specified key(s)."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"object",children:(0,r.jsx)(a.p,{children:"A data2d or a data3d object."})}),(0,r.jsx)(i,{name:"key",type:"string",children:(0,r.jsx)(a.p,{children:"A key identifier. This parameter is only available with data2d object; not available for data3d."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d primary key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d data key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"float",children:(0,r.jsx)(a.p,{children:"A float value, or na for other data type."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"get-int",children:"getInt()"}),"\n",(0,r.jsx)(a.p,{children:"Get the integer value for the specified key(s)."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"object",children:(0,r.jsx)(a.p,{children:"A data2d or a data3d object."})}),(0,r.jsx)(i,{name:"key",type:"string",children:(0,r.jsx)(a.p,{children:"A key identifier. This parameter is only available with data2d object; not available for data3d."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d primary key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d data key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"int",children:(0,r.jsx)(a.p,{children:"An integer value, or na for other data type."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"get-bool",children:"getBool()"}),"\n",(0,r.jsx)(a.p,{children:"Get the boolean value for the specified key(s)."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"object",children:(0,r.jsx)(a.p,{children:"A data2d or a data3d object."})}),(0,r.jsx)(i,{name:"key",type:"string",children:(0,r.jsx)(a.p,{children:"A key identifier. This parameter is only available with data2d object; not available for data3d."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d primary key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d data key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"bool",children:(0,r.jsx)(a.p,{children:"A boolean value, or na for other data type."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"get-color",children:"getColor()"}),"\n",(0,r.jsx)(a.p,{children:"Get the color value for the specified key(s)."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"object",children:(0,r.jsx)(a.p,{children:"A data2d or a data3d object."})}),(0,r.jsx)(i,{name:"key",type:"string",children:(0,r.jsx)(a.p,{children:"A key identifier. This parameter is only available with data2d object; not available for data3d."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d primary key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d data key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"color",children:(0,r.jsx)(a.p,{children:"A color value, or na for other data type."})})]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"get-timestamp",children:"getTimestamp()"}),"\n",(0,r.jsx)(a.p,{children:"Get the unix timestamp value for the specified key(s)."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)(i,{name:"this",type:"object",children:(0,r.jsx)(a.p,{children:"A data2d or a data3d object."})}),(0,r.jsx)(i,{name:"key",type:"string",children:(0,r.jsx)(a.p,{children:"A key identifier. This parameter is only available with data2d object; not available for data3d."})}),(0,r.jsx)(i,{name:"primaryKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d primary key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"dataKey",type:"string",children:(0,r.jsx)(a.p,{children:"A data3d data key. This parameter is only available with data3d object; not available for data2d."})}),(0,r.jsx)(i,{name:"alt",type:"bool",children:(0,r.jsxs)(a.p,{children:["Set to true to obtain the alternate values instead. ",(0,r.jsx)(a.em,{children:"Optional. The default is false"}),"."]})}),(0,r.jsx)(i,{name:"returns",type:"int",children:(0,r.jsx)(a.p,{children:"A unix timestamp value, or na for other data type."})})]})]})}var s=!0;function l(e,a){throw Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}a.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:a}=Object.assign({},(0,n.ah)(),e.components);return a?(0,r.jsx)(a,Object.assign({},e,{children:(0,r.jsx)(i,e)})):i(e)}}},function(e){e.O(0,[774,888,179],function(){return e(e.s=725)}),_N_E=e.O()}]);